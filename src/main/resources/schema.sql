DROP TABLE IF EXISTS film_mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;

CREATE TABLE IF NOT EXISTS film_mpa
(
    mpa_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_rating VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_directors
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL UNIQUE
);

COMMENT ON TABLE film_directors IS 'Таблица для хранения информации о режисере фильма';
COMMENT ON COLUMN film_directors.id IS 'Уникальный идентификатор режисера';
COMMENT ON COLUMN film_directors.name IS 'Имя режисера, не может быть пустым';

CREATE TABLE IF NOT EXISTS films
(
    film_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INTEGER CHECK (duration > 0),
    mpa_id       INTEGER REFERENCES film_mpa (mpa_id) ON DELETE RESTRICT,
    directors_id INTEGER REFERENCES film_directors (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_type VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  BIGINT  NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genre (genre_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR NOT NULL UNIQUE,
    login    VARCHAR NOT NULL UNIQUE,
    name     VARCHAR NOT NULL,
    birthday DATE    NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   BIGINT  NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id BIGINT  NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    is_friend BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE
);






